/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  Drupal.color = {
    logoChanged: false,
    callback: function callback(context, settings, $form) {

      if (!this.logoChanged) {
        $('.color-preview .color-preview-logo img').attr('src', drupalSettings.color.logo);
        this.logoChanged = true;
      }

      function hexToRGB(hex, alpha) {
        var r = parseInt(hex.slice(1, 3), 16),
          g = parseInt(hex.slice(3, 5), 16),
          b = parseInt(hex.slice(5, 7), 16);

        if (alpha) {
          return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
        } else {
          return "rgb(" + r + ", " + g + ", " + b + ")";
        }
      }

      if (drupalSettings.color.logo === null) {
        $('div').remove('.color-preview-logo');
      }

      var $colorPreview = $form.find('.color-preview');
      var $colorPalette = $form.find('.js-color-palette');

      $colorPreview.find('*').click(function(e) {
        e.preventDefault();
        $form.find('.color-preview *').css('outline', 'none');
        var outline =  "4px solid" + $colorPalette.find('input[name="palette[focus-outline-color]"]').val();
        $form.find('.color-preview *:focus').css({'outline': outline, 'box-shadow': 'none'});
      });

      $colorPreview.find('.block-dgi-header').css('backgroundColor', $colorPalette.find('input[name="palette[base-color]"]').val());
      $colorPreview.find('.views-field-field-model .field-content').css('color', $colorPalette.find('input[name="palette[base-color]"]').val());
      $colorPreview.find('.breadcrumb-wrapper a').css('color', $colorPalette.find('input[name="palette[base-color]"]').val());

      $colorPreview.find('.solr-search-content header .display-links a').css('color', $colorPalette.find('input[name="palette[secondary-color]"]').val());
      $colorPreview.find('.solr-search-content header .display-links i.fal').css('color', $colorPalette.find('input[name="palette[secondary-color]"]').val());

      var secondaryBorderLight = hexToRGB($colorPalette.find('input[name="palette[secondary-color]"]').val(), ".25");
      $colorPreview.find('.views-display-link-page_1.is-active:before').css('border', '1px solid ' + secondaryBorderLight);


      var selectColor = hexToRGB($colorPalette.find('input[name="palette[secondary-color]"]').val(), ".75");
      $colorPreview.find('.select-wrapper').css('color', selectColor);
      var comboBorder = hexToRGB($colorPalette.find('input[name="palette[secondary-color]"]').val(), ".25");
      $colorPreview.find('.select-wrapper .combo-input').css('border', '1px solid ' + comboBorder);

      $colorPreview.find('.facet-item .label').css('color', selectColor);
      $colorPreview.find('.facet-item__value, .facet-item__count').css('color', $colorPalette.find('input[name="palette[secondary-color]"]').val());
      $colorPreview.find('.filter-collection-toggle-box .filter-button-close').css('color', $colorPalette.find('input[name="palette[secondary-color]"]').val());

      var filterBtnBorder = hexToRGB($colorPalette.find('input[name="palette[tertiary-color]"]').val(), ".25");
      $colorPreview.find('.solr-search-content header .filter-btn-wrapper .filter-btn.active').css('color', $colorPalette.find('input[name="palette[tertiary-color]"]').val());
      $colorPreview.find('.solr-search-content header .filter-btn-wrapper .filter-btn.active').css('border', '1px solid ' + filterBtnBorder);

      $colorPreview.find('.solr-search-content header .form-item-sort-by .select-wrapper:before, .solr-search-content header .form-item-changed .select-wrapper:before, .solr-search-content .view-header .form-item-sort-by .select-wrapper:before, .solr-search-content .view-header .form-item-changed .select-wrapper:before').css('color', selectColor);
      $colorPreview.find('#edit-items-per-page--2--js-select, #edit-sort-by--2--js-select, .select-js-controls-wrapper:before, .edit-sort-order--2--js-select:before, #edit-items-per-page--2--js-select:before').css('color', selectColor);

    }
  };
})(jQuery, Drupal, drupalSettings);
